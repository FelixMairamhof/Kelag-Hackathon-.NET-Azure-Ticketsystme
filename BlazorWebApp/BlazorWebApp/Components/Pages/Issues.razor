@page "/issues"
@page "/github-issues"
@using System.Net.Http.Headers
@using System.Text
@using System.Text.Json
@using System.Text.Json.Serialization

<h1>GitHub Issues</h1>

<ul>
    @foreach (var issue in Issuess)
    {
        <li>@issue.Title</li>
    }
</ul>

@code {
    private List<GithubIssue> Issuess { get; set; } = new List<GithubIssue>();
    String name = "123test123";
    

    protected override async Task OnInitializedAsync()
    {
        await MakeRequest();
    }

    private async Task MakeRequest()
    {
        var client = new HttpClient();

        // Request headers
        client.DefaultRequestHeaders.CacheControl = CacheControlHeaderValue.Parse("no-cache");
        client.DefaultRequestHeaders.Add("Ocp-Apim-Subscription-Key", "31ed80b9e6264b81b70c8abed0a7d156");

        var uri = "https://apim-forstsee-hackathon.azure-api.net/github/Kelag-Hackathon-2024-Team-7/issues";

        var issue = new
        {
            title = "My New Issue",
            body = "This is the body of my new issue",
            labels = new[] { "Label1", "label2" }
        };

        // Serialize the JSON object to a string
        var json = JsonSerializer.Serialize(issue, new JsonSerializerOptions { WriteIndented = true });

        using (var content = new StringContent(json, Encoding.UTF8, "application/json"))
        {
            HttpResponseMessage response = await client.PostAsync(uri, content);
            Console.WriteLine(response);
        }
    }

    public class GithubIssue
    {
        [JsonPropertyName("title")]
        public string Title { get; set; }

        [JsonPropertyName("body")]
        public string Body { get; set; }

        [JsonPropertyName("labels")]
        public string Labels { get; set; }
    }
}