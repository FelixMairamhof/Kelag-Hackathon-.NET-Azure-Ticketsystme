@page "/Create"
@using System.Text
@using System.Text.Json
@using Microsoft.Data.SqlClient
@rendermode InteractiveServer



<PageTitle>Create</PageTitle>

<h1>Create</h1>

<label for="issue">Enter the issue:</label>
<input type="text" id="issue" name="issue" @bind="issue" />


<button type="submit" @onclick="sendData">Send</button>



@code {

    private string issue;
    private static readonly HttpClient client = new HttpClient();




    public async void sendData()
    {
        Console.WriteLine(issue);
        var requestBody = new { prompt = issue };
        var json = JsonSerializer.Serialize(requestBody);
        var content = new StringContent(json, Encoding.UTF8, "application/json");
        client.DefaultRequestHeaders.Add("Ocp-Apim-Subscription-Key", "31ed80b9e6264b81b70c8abed0a7d156");
        var response = await client.PostAsync("https://kickets7251834894.openai.azure.com/openai/deployments/gpt-35-turbo/chat/completions?api-version=2024-02-01 ", content);
        var responseString = await response.Content.ReadAsStringAsync();
        
        Console.WriteLine(responseString);
        
        string connectionString = "Server=tcp:issues-server-db.database.windows.net,1433;Initial Catalog=issues;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;Authentication=\"Active Directory Default\"";

        using (SqlConnection connection = new SqlConnection(connectionString))
        {
            connection.Open();

            // Create table if it doesn't exist
            SqlCommand createTableCommand = new SqlCommand(@"IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'Issues')
                                                            CREATE TABLE Issues (
                                                                Id INT IDENTITY(1,1) PRIMARY KEY,
                                                                Title NVARCHAR(50),
                                                                Description NVARCHAR(200),
                                                                ServiceName NVARCHAR(50),
                                                                Label NVARCHAR(50)
                                                            );", connection);
            createTableCommand.ExecuteNonQuery();

            // Insert values into the table
            SqlCommand insertCommand = new SqlCommand(@"INSERT INTO Issues (Title, Description, ServiceName, Label) 
                                                        VALUES (@title, @description, @serviceName, @label);", connection);
            insertCommand.Parameters.AddWithValue("@title", "Issue Title");
            insertCommand.Parameters.AddWithValue("@description", issue);
            insertCommand.Parameters.AddWithValue("@serviceName", "Service Name");
            insertCommand.Parameters.AddWithValue("@label", "Label");
            insertCommand.ExecuteNonQuery();

            connection.Close();
        }
    }

    
    

}